<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.it.mapper.WasteOutputMapper">
  <resultMap id="BaseResultMap" type="com.it.pojo.WasteOutput">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="batch_code" jdbcType="VARCHAR" property="batchCode" />
    <result column="output_date" jdbcType="DATE" property="outputDate" />
    <result column="amount" jdbcType="INTEGER" property="amount" />
    <result column="measure" jdbcType="VARCHAR" property="measure" />
    <result column="handler" jdbcType="VARCHAR" property="handler" />
    <result column="waste_flow_type" jdbcType="VARCHAR" property="wasteFlowType" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="isdeleted" jdbcType="INTEGER" property="isdeleted" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, batch_code, output_date, amount, measure, handler, waste_flow_type, create_time, 
    isdeleted
  </sql>
  <select id="selectByExample" parameterType="com.it.pojo.WasteOutputExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from waste_output
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from waste_output
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from waste_output
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.it.pojo.WasteOutputExample">
    delete from waste_output
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.it.pojo.WasteOutput">
    insert into waste_output (id, batch_code, output_date, 
      amount, measure, handler, 
      waste_flow_type, create_time, isdeleted
      )
    values (#{id,jdbcType=INTEGER}, #{batchCode,jdbcType=VARCHAR}, #{outputDate,jdbcType=DATE}, 
      #{amount,jdbcType=INTEGER}, #{measure,jdbcType=VARCHAR}, #{handler,jdbcType=VARCHAR}, 
      #{wasteFlowType,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{isdeleted,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.it.pojo.WasteOutput">
    insert into waste_output
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="batchCode != null">
        batch_code,
      </if>
      <if test="outputDate != null">
        output_date,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="measure != null">
        measure,
      </if>
      <if test="handler != null">
        handler,
      </if>
      <if test="wasteFlowType != null">
        waste_flow_type,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="isdeleted != null">
        isdeleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="batchCode != null">
        #{batchCode,jdbcType=VARCHAR},
      </if>
      <if test="outputDate != null">
        #{outputDate,jdbcType=DATE},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=INTEGER},
      </if>
      <if test="measure != null">
        #{measure,jdbcType=VARCHAR},
      </if>
      <if test="handler != null">
        #{handler,jdbcType=VARCHAR},
      </if>
      <if test="wasteFlowType != null">
        #{wasteFlowType,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isdeleted != null">
        #{isdeleted,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.it.pojo.WasteOutputExample" resultType="java.lang.Long">
    select count(*) from waste_output
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update waste_output
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.batchCode != null">
        batch_code = #{record.batchCode,jdbcType=VARCHAR},
      </if>
      <if test="record.outputDate != null">
        output_date = #{record.outputDate,jdbcType=DATE},
      </if>
      <if test="record.amount != null">
        amount = #{record.amount,jdbcType=INTEGER},
      </if>
      <if test="record.measure != null">
        measure = #{record.measure,jdbcType=VARCHAR},
      </if>
      <if test="record.handler != null">
        handler = #{record.handler,jdbcType=VARCHAR},
      </if>
      <if test="record.wasteFlowType != null">
        waste_flow_type = #{record.wasteFlowType,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isdeleted != null">
        isdeleted = #{record.isdeleted,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update waste_output
    set id = #{record.id,jdbcType=INTEGER},
      batch_code = #{record.batchCode,jdbcType=VARCHAR},
      output_date = #{record.outputDate,jdbcType=DATE},
      amount = #{record.amount,jdbcType=INTEGER},
      measure = #{record.measure,jdbcType=VARCHAR},
      handler = #{record.handler,jdbcType=VARCHAR},
      waste_flow_type = #{record.wasteFlowType,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      isdeleted = #{record.isdeleted,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.it.pojo.WasteOutput">
    update waste_output
    <set>
      <if test="batchCode != null">
        batch_code = #{batchCode,jdbcType=VARCHAR},
      </if>
      <if test="outputDate != null">
        output_date = #{outputDate,jdbcType=DATE},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=INTEGER},
      </if>
      <if test="measure != null">
        measure = #{measure,jdbcType=VARCHAR},
      </if>
      <if test="handler != null">
        handler = #{handler,jdbcType=VARCHAR},
      </if>
      <if test="wasteFlowType != null">
        waste_flow_type = #{wasteFlowType,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isdeleted != null">
        isdeleted = #{isdeleted,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.it.pojo.WasteOutput">
    update waste_output
    set batch_code = #{batchCode,jdbcType=VARCHAR},
      output_date = #{outputDate,jdbcType=DATE},
      amount = #{amount,jdbcType=INTEGER},
      measure = #{measure,jdbcType=VARCHAR},
      handler = #{handler,jdbcType=VARCHAR},
      waste_flow_type = #{wasteFlowType,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      isdeleted = #{isdeleted,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>